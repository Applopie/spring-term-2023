// at least i've tried
#include <iostream>
#include <fstream>
#include <chrono>
#include <random>

using namespace std;

void forwardstep(int arr[], int lb, int rb)
{
    for (int i = lb; i < rb - 1; i++)
    {
        if (arr[i] > arr[i + 1])
        {
            swap(arr[i], arr[i + 1]);
        }
    }
}

void backwardstep(int arr[], int lb, int rb)
{
    for (int i = rb - 2; i > lb; i--)
    {
        if (arr[i] < arr[i - 1])
        {
            swap(arr[i], arr[i - 1]);
        }
    }
}

void shaker_sort(int arr[], int lb, int rb)
{
    while (lb < rb)
    {
        forwardstep(arr, lb, rb);
        backwardstep(arr, lb, rb);
        rb--;
        lb++;
    }
}

int main()
{
    int ansa1[5] = {10, 0, 5, 3, 11};

    int ansa2[10] = {22, 3, 3, 11, 1, 7, 19, 101, 11, 109};

    int ansa3[15] = {3, 3, 3, 3, 3, 6, 5, 6, 7, 0, 0, 7, 3, 5, 101};

    int ansa4[20] = {10, 2, 4, 12, 64, 70, 64, 2, 13, 5, 76, 89, 67, 4, 44, 34, 12, 65, 32, 98};

    int ansa6[30] = {15, 69, 53, 50, 0, 7, 4, 2, 1, 76, 212, 234, 211, 334, 9, 6, 4, 3, 1, 90, 87, 45, 23, 11, 400,
                     567, 653, 234, 120, 890};

    int ansa7[35] = {5, 67, 12, 21, 8, 54, 23, 56, 0, 345, 77, 67, 90, 456, 1, 23, 20, 245, 7, 15, 56, 87, 32, 78, 101,
                     342, 21, 15, 870, 64, 1, 1, 1, 56, 965};

    int ansa8[40] = {5, 67, 12, 21, 8, 54, 23, 56, 0, 345, 77, 67, 90, 456, 1, 23, 20, 245, 7, 15, 56, 87, 32, 78, 101,
                     342, 21, 15, 870, 64, 1, 1, 1, 56, 396, 965, 65, 13, 4, 1025};

    int ansa10[56] = {4, 3, 12, 15, 4, 6, 6, 17, 10, 45, 45, 12, 12, 56, 77, 90, 12, 13, 14, 65, 66, 64, 67, 63, 0, 0, 0, 1,
                      2, 11, 76, 72, 23, 43, 84, 54, 56, 90, 98, 65, 33, 37, 87, 21, 10, 5, 4, 3, 8, 6, 12, 22, 33, 44, 22, 778};

    int a1[5] = {10, 11, 0, 5, 3};

    int a2[10] = {22, 101, 3, 3, 11, 1, 7, 19, 109, 11};

    int a3[15] = {3, 3, 3, 3, 3, 6, 6, 5, 7, 7, 0, 0, 101, 3, 5};

    int a4[20] = {10, 12, 2, 4, 64, 70, 76, 64, 2, 13, 5, 89, 98, 67, 4, 44, 34, 12, 65, 32};

    int a6[30] = {15, 69, 76, 53, 50, 0, 7, 4, 2, 1, 334, 212, 234, 211, 400, 9, 6, 4, 3, 1, 90, 87, 45, 23, 11, 890,
                  567, 653, 234, 120};

    int a7[35] = {67, 5, 345, 12, 21, 8, 54, 23, 56, 0, 456, 77, 67, 90, 965, 1, 23, 20, 245, 7, 15, 56, 87, 32, 78, 101,
                  342, 21, 15, 870, 64, 1, 1, 1, 56};

    int a8[40] = {67, 5, 345, 12, 21, 8, 54, 23, 56, 0, 456, 77, 67, 90, 965, 1, 23, 20, 245, 7, 15, 56, 87, 32, 78, 101,
                  342, 21, 15, 870, 64, 1, 1, 1, 56, 396, 1025, 65, 13, 4};

    int a10[56] = {4, 12, 3, 56, 15, 4, 6, 6, 17, 10, 45, 45, 12, 12, 77, 778, 90, 12, 13, 14, 65, 66, 64, 67, 63, 0, 0, 0, 1,
                   2, 11, 76, 72, 23, 43, 84, 54, 56, 90, 98, 65, 33, 37, 87, 21, 10, 5, 4, 3, 8, 6, 12, 22, 33, 44, 22};

    forwardstep(a1, 0, 4);
    forwardstep(a2, 0, 9);
    forwardstep(a3, 0, 14);
    forwardstep(a4, 0, 19);
    forwardstep(a6, 0, 29);
    forwardstep(a7, 0, 34);
    forwardstep(a8, 0, 39);
    forwardstep(a10, 0, 55);

    int marker = 0;
    cout << "forwardstep" << endl;
    if (equal(a1, a1 + 5, ansa1))
    {
        marker++;
    }
    if (equal(a2, a2 + 10, ansa2))
    {
        marker++;
    }
    if (equal(a3, a3 + 15, ansa3))
    {
        marker++;
    }
    if (equal(a4, a4 + 20, ansa4))
    {
        marker++;
    }
    if (equal(a6, a6 + 30, ansa6))
    {
        marker++;
    }
    if (equal(a7, a7 + 35, ansa7))
    {
        marker++;
    }
    if (equal(a8, a8 + 40, ansa8))
    {
        marker++;
    }
    if (equal(a10, a10 + 56, ansa10))
    {
        marker++;
    }

    if (marker == 8)
    {
        cout << "working";
    }
    else
    {
        cout << "umm not" << marker;
    }
    cout << endl;

    int a11[5] = {10, 11, 0, 5, 3};

    int a22[10] = {22, 101, 3, 3, 11, 1, 7, 19, 109, 11};

    int a33[15] = {3, 3, 3, 3, 3, 6, 6, 5, 7, 7, 0, 0, 101, 3, 5};

    int a44[20] = {10, 12, 2, 4, 64, 70, 76, 64, 2, 13, 5, 89, 98, 67, 4, 44, 34, 12, 65, 32};

    int a66[30] = {15, 69, 76, 53, 50, 0, 7, 4, 2, 1, 334, 212, 234, 211, 400, 9, 6, 4, 3, 1, 90, 87, 45, 23, 11, 890,
                   567, 653, 234, 120};

    int a77[35] = {67, 5, 345, 12, 21, 8, 54, 23, 56, 0, 456, 77, 67, 90, 965, 1, 23, 20, 245, 7, 15, 56, 87, 32, 78, 101,
                   342, 21, 15, 870, 64, 1, 1, 1, 56};

    int a88[40] = {67, 5, 345, 12, 21, 8, 54, 23, 56, 0, 456, 77, 67, 90, 965, 1, 23, 20, 245, 7, 15, 56, 87, 32, 78, 101,
                   342, 21, 15, 870, 64, 1, 1, 1, 56, 396, 1025, 65, 13, 4};

    int a1010[56] = {4, 12, 3, 56, 15, 4, 6, 6, 17, 10, 45, 45, 12, 12, 77, 778, 90, 12, 13, 14, 65, 66, 64, 67, 63, 0, 0, 0, 1,
                     2, 11, 76, 72, 23, 43, 84, 54, 56, 90, 98, 65, 33, 37, 87, 21, 10, 5, 4, 3, 8, 6, 12, 22, 33, 44, 22};

    int answa1[5] = {0, 10, 11, 3, 5};

    int answa2[10] = {1, 22, 101, 3, 3, 11, 7, 11, 19, 109};

    int answa3[15] = {0, 3, 3, 3, 3, 3, 6, 6, 5, 7, 7, 0, 3, 101, 5};

    int answa4[20] = {2, 10, 12, 2, 4, 64, 70, 76, 64, 4, 13, 5, 89, 98, 67, 12, 44, 34, 32, 65};

    int answa6[30] = {0, 15, 69, 76, 53, 50, 1, 7, 4, 2, 1, 334, 212, 234, 211, 400, 9, 6, 4, 3, 11, 90, 87, 45, 23, 120, 890,
                      567, 653, 234};

    int answa7[35] = {0, 67, 5, 345, 12, 21, 8, 54, 23, 56, 1, 456, 77, 67, 90, 965, 1, 23, 20, 245, 7, 15, 56, 87, 32, 78, 101,
                      342, 21, 15, 870, 64, 1, 1, 56};

    int answa8[40] = {0, 67, 5, 345, 12, 21, 8, 54, 23, 56, 1, 456, 77, 67, 90, 965, 1, 23, 20, 245, 7, 15, 56, 87, 32, 78, 101,
                      342, 21, 15, 870, 64, 1, 1, 4, 56, 396, 1025, 65, 13};

    int answa10[56] = {0, 4, 12, 3, 56, 15, 4, 6, 6, 17, 10, 45, 45, 12, 12, 77, 778, 90, 12, 13, 14, 65, 66, 64, 67, 63, 0, 0, 1,
                       2, 3, 11, 76, 72, 23, 43, 84, 54, 56, 90, 98, 65, 33, 37, 87, 21, 10, 5, 4, 6, 8, 12, 22, 22, 33, 44};

    backwardstep(a11, 0, 4);
    backwardstep(a22, 0, 9);
    backwardstep(a33, 0, 14);
    backwardstep(a44, 0, 19);
    backwardstep(a66, 0, 29);
    backwardstep(a77, 0, 34);
    backwardstep(a88, 0, 39);
    backwardstep(a1010, 0, 55);

    marker = 0;
    cout << "backwardstep" << endl;
    if (equal(a11, a11 + 5, answa1))
    {
        marker++;
    }
    if (equal(a22, a22 + 10, answa2))
    {
        marker++;
    }
    if (equal(a33, a33 + 15, answa3))
    {
        marker++;
    }
    if (equal(a44, a44 + 20, answa4))
    {
        marker++;
    }
    if (equal(a66, a66 + 30, answa6))
    {
        marker++;
    }
    if (equal(a77, a77 + 35, answa7))
    {
        marker++;
    }
    if (equal(a88, a88 + 40, answa8))
    {
        marker++;
    }
    if (equal(a1010, a1010 + 56, answa10))
    {
        marker++;
    }

    if (marker == 8)
    {
        cout << "working";
    }
    else
    {
        cout << "umm not" << marker;
    }
    cout << endl;

    int aa1[5] = {10, 11, 0, 5, 3};

    int aa2[10] = {22, 101, 3, 3, 11, 1, 7, 19, 109, 11};

    int aa3[15] = {3, 3, 3, 3, 3, 6, 6, 5, 7, 7, 0, 0, 101, 3, 5};

    int aa4[20] = {10, 12, 2, 4, 64, 70, 76, 64, 2, 13, 5, 89, 98, 67, 4, 44, 34, 12, 65, 32};

    int aa6[30] = {15, 69, 76, 53, 50, 0, 7, 4, 2, 1, 334, 212, 234, 211, 400, 9, 6, 4, 3, 1, 90, 87, 45, 23, 11, 890,
                   567, 653, 234, 120};

    int aa7[35] = {67, 5, 345, 12, 21, 8, 54, 23, 56, 0, 456, 77, 67, 90, 965, 1, 23, 20, 245, 7, 15, 56, 87, 32, 78, 101,
                   342, 21, 15, 870, 64, 1, 1, 1, 56};

    int aa8[40] = {67, 5, 345, 12, 21, 8, 54, 23, 56, 0, 456, 77, 67, 90, 965, 1, 23, 20, 245, 7, 15, 56, 87, 32, 78, 101,
                   342, 21, 15, 870, 64, 1, 1, 1, 56, 396, 1025, 65, 13, 4};

    int aa10[56] = {4, 12, 3, 56, 15, 4, 6, 6, 17, 10, 45, 45, 12, 12, 77, 778, 90, 12, 13, 14, 65, 66, 64, 67, 63, 0, 0, 0, 1,
                    2, 11, 76, 72, 23, 43, 84, 54, 56, 90, 98, 65, 33, 37, 87, 21, 10, 5, 4, 3, 8, 6, 12, 22, 33, 44, 22};

    int answera1[5] = {0, 3, 5, 10, 11};

    int answera2[10] = {1, 3, 3, 7, 11, 11, 19, 22, 101, 109};

    int answera3[15] = {0, 0, 3, 3, 3, 3, 3, 3, 5, 5, 6, 6, 7, 7, 101};

    int answera4[20] = {2, 2, 4, 4, 5, 10, 12, 12, 13, 32, 34, 44, 64, 64, 65, 67, 70, 76, 89, 98};

    int answera6[30] = {0, 1, 1, 2, 3, 4, 4, 6, 7, 9, 11, 15, 23, 45, 50, 53, 69, 76, 87, 90, 120, 211, 212, 234, 234, 334, 400,
                        567, 653, 890};

    int answera7[35] = {0, 1, 1, 1, 1, 5, 7, 8, 12, 15, 15, 20, 21, 21, 23, 23, 32, 54, 56, 56, 56, 64, 67, 67, 77, 78, 87, 90,
                        101, 245, 342, 345, 456, 870, 965};

    int answera8[40] = {0, 1, 1, 1, 1, 4, 5, 7, 8, 12, 13, 15, 15, 20, 21, 21, 23, 23, 32, 54, 56, 56, 56, 64, 65, 67, 67, 77,
                        78, 87, 90, 101, 245, 342, 345, 396, 456, 870, 965, 1025};

    int answera10[56] = {0, 0, 0, 1, 2, 3, 3, 4, 4, 4, 5, 6, 6, 6, 8, 10, 10, 11, 12, 12, 12, 12, 12, 13, 14, 15, 17, 21, 22,
                         22, 23, 33, 33, 37, 43, 44, 45, 45, 54, 56, 56, 63, 64, 65, 65, 66, 67, 72, 76, 77, 84, 87, 90, 90, 98, 778};

    shaker_sort(aa1, 0, 4);
    shaker_sort(aa2, 0, 9);
    shaker_sort(aa3, 0, 14);
    shaker_sort(aa4, 0, 19);
    shaker_sort(aa6, 0, 29);
    shaker_sort(aa7, 0, 34);
    shaker_sort(aa8, 0, 39);
    shaker_sort(aa10, 0, 55);

    marker = 0;
    cout << "function" << endl;
    if (equal(aa1, aa1 + 5, answera1))
    {
        marker++;
    }
    if (equal(aa2, aa2 + 10, answera2))
    {
        marker++;
    }
    if (equal(aa3, aa3 + 15, answera3))
    {
        marker++;
    }
    if (equal(aa4, aa4 + 20, answera4))
    {
        marker++;
    }
    if (equal(aa6, aa6 + 30, answera6))
    {
        marker++;
    }
    if (equal(aa7, aa7 + 35, answera7))
    {
        marker++;
    }
    if (equal(aa8, aa8 + 40, answera8))
    {
        marker++;
    }
    if (equal(aa10, aa10 + 56, answera10))
    {
        marker++;
    }

    if (marker == 8)
    {
        cout << "working";
    }
    else
    {
        cout << "umm not" << marker;
    }
    cout << endl;

    return 0;
}